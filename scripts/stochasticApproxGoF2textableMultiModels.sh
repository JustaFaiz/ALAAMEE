#!/bin/bash
#
# File:    stochasticApproxGoF2textableMultiModels.sh
# Author:  Alex Stivala
# Created: October 2022
#
#
# Read output of estimateALAAMSA.run_on_network_attr() with
# to get goodness-of-fit t-ratios computed after Stochastic
# Approximation algorithm for ALAAM and build LaTeX table for multiple
# different models
# 
# Usage: stochasticApproxGoF2textableMultiModels.sh estimationoutputfile_model1 estimationoutputfile_model2 ...
#
# E.g.:
#   stochasticApproxGoF2textableMultiModels.sh  estimation.out model2/estimation.out
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.

tratioThreshold=2.0 # t-ratio larger than this is put in bold


if [ $# -lt 1 ]; then
    echo "usage: $0 estimation1.out estimation2.out ..." >&2
    exit 1
fi

num_models=`expr $#`

tmpfile=`mktemp`

echo "% Generated by: $0 $*"
echo "% At: " `date`
echo "% On: " `uname -a`

echo -n '\begin{tabular}{l'
i=1
while [ $i -le $num_models ]
do
  echo -n r
  i=`expr $i + 1`
done
echo '}'
echo '\hline'  
echo -n 'Effect '
i=1
while [ $i -le $num_models ]
do
  echo -n " & Model $i"
  i=`expr $i + 1`
done
echo '\\'
echo '\hline'  

#
# Estimation output looks like this:
#...
#                                 t-ratio
#             BipartiteDensity.B   0.017
#            BipartiteActivity.B   0.000
#          BipartiteEgoTwoStar.B  -0.015
#        BipartiteEgoThreeStar.B  -0.026
#       BipartiteAlterTwoStar1.B   0.008
#       BipartiteAlterTwoStar2.B  -0.011
#               oOb.notAustralia  -0.026
#               oOc.logMarketCap   0.005
#                oOc.ListingYear   0.015
#    oOb.industryGroup.Materials   0.094
#        oOb.industryGroup.Banks  -0.039
#              o_Ob.notAustralia  -0.024
#                       o_Oc.age   0.007
#               oO_Odiff.country  -0.023
#              oOc.birank.scaled   0.021
#          BipartiteFourCycle1.B   0.986
#          BipartiteFourCycle2.B   0.207
#         oOc.betweenness.scaled  -0.209
#       oOc.harmonic.cent.scaled   0.208
#
#           Mahalanobis_distance 3.291206
#
# twoPaths cache info:  CacheInfo(hits=0, misses=0, maxsize=None, currsize=0)
#
#
# We will parse from after the "                t-ratio" header line to get
# parameter names and t-ratios, and also separately get the Mahalanobis
# distance if present.
#

model=1
has_mahal=0
for estimationresults in $*
do
    cat ${estimationresults} | sed -n -e '/^[[:space:]]*t-ratio$/,/^$/{p}' | sed '1d;$d'  | fgrep -vw 'Estimate' | awk '{print $1,$2}'  |  tr ' ' '\t' | sed "s/^/${model}\t/" >> ${tmpfile}
    fgrep -q 'Mahalanobis_distance' ${estimationresults}
    if [ $? -eq 0 ]; then
        mahal_dist=`fgrep Mahalanobis_distance ${estimationresults} | awk '{print $2}'`
        echo -e "${model}\tMahalanobis_distance\t${mahal_dist}" >> ${tmpfile}
        has_mahal=1
    fi
    model=`expr $model + 1`
done

effectlist=`cat ${tmpfile} | fgrep -v Mahalanobis_distance | awk '{print $2}' | sort | uniq`

for effect in ${effectlist} Mahalanobis_distance
do
    if [ ${has_mahal} -ne 0 -a ${effect} = "Mahalanobis_distance" ]; then
        echo '\hline'
    fi
    model=1
    if [ ${effect} != "Mahalanobis_distance" -o ${has_mahal} -ne 0 ]; then
        echo -n "${effect} " | tr '_' ' '
    fi
    while [ $model -le $num_models ]; 
    do
        if [ ${effect} = "Mahalanobis_distance" ]; then
            if [ ${has_mahal} -ne 0 ]; then
                mahal_dist=`grep -w ${effect} ${tmpfile} | awk -vmodel=$model '$1 == model {print $3}'`
                echo -n " & ${mahal_dist}"
            fi
        else
            tratio=`grep -w ${effect} ${tmpfile} | awk -vmodel=$model '$1 == model {print $3}'`
            if [ "${tratio}" = "" ];  then
                echo -n " & ---"
            elif [ "${tratio}" = "nan" ];  then
                echo -n " & ---"
            else
                abs_tratio=`echo "if (${tratio} < 0) -(${tratio}) else ${tratio}" | bc -l`
                good_fit=`echo "${abs_tratio} < ${tratioThreshold}" | bc -l`
                if [ $good_fit -eq 1 ]; then
                    printf ' & $%.3f$' ${tratio}
                else
                    printf ' & $\\mathbf{%.3f}$' ${tratio}
                fi
            fi
        fi
        model=`expr $model + 1`
    done
    echo '\\'
done

echo '\hline'  
echo '\end{tabular}'

rm ${tmpfile}
