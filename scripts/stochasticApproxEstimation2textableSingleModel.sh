#!/bin/bash
#
# File:    stochasticApproxEstimation2textableSingleModel.sh
# Author:  Alex Stivala
# Created: October 2022
#
#
# Read output of estimateALAAMSA.run_on_network_attr() with point
# estimate, estimated std. error and t-ratio computed from Stochastic
# Approximation algorithm for ALAAM and build LaTeX table for a single
# model.
# 
# Usage: stochasticApproxEstimation2textableSingleModel.sh estimationoutputfile_model
#
# E.g.:
#   stochasticApproxEstimation2textableSingleModel.sh  estimation.out
#
# Output is to stdout
#
# Uses various GNU utils options on echo, etc.


if [ $# -ne 1 ]; then
    echo "usage: $0 estimation.out" >&2
    exit 1
fi

estimationresults=$1

tmpfile=`mktemp`

echo "% Generated by: $0 $*"
echo "% At: " `date`
echo "% On: " `uname -a`

echo '\begin{tabular}{lrrrc}'
echo '\hline'
echo 'Effect & Estimate & Std. error \\'
echo '\hline'

#
# Estimation output looks like this:
#...
# Total estimation time ( 3 runs) was 71352.1231713295 s
# Converged.
#                                 Estimate  Std.Error t-ratio
#              bipartiteDensityA  -1.840     0.086     0.041 *
#             bipartiteActivityA  -0.870     0.104     0.018 *
#           bipartiteEgoTwoStarA   0.025     0.026    -0.041
#         bipartiteEgoThreeStarA  -0.003     0.002    -0.059
#        bipartiteAlterTwoStar1A   0.227     0.018     0.012 *
#        bipartiteAlterTwoStar2A  -0.104     0.030     0.024 *
#           bipartiteFourCycle1A  -0.008     0.021     0.011
#           bipartiteFourCycle2A  -0.018     0.050    -0.012
#                        age_oOc  -0.014     0.001    -0.028 *
#               notAustralia_oOb   0.098     0.073     0.043
#                betweenness_oOc  -0.000     0.000    -0.037
#
# Running goodness-of-fit test...
#...
#
# We will parse from after the "Converged." and header line to get
# parameter names, point estimates and standard error estimates.
#

cat ${estimationresults} | sed -n -e '/^Converged/,/^$/{p}' | sed '1d;$d'  | fgrep -vw 'Estimate' > ${tmpfile}
cat ${tmpfile} | while read line
do
    effect=`echo "${line}" | awk '{print $1}'`
    point=`echo "${line}" | awk '{print $2}'`
    stderr=`echo "${line}" | awk '{print $3}'`
    tratio=`echo "${line}" | awk '{print $4}'`
    signif=`echo "${line}" | awk '{print $5}'`
    printf '%s & %s & %s & %s & %s \\\\ \n' ${effect} ${point} ${stderr} ${tratio} "${signif}"
done
echo '\\'
echo '\hline'  
echo '\end{tabular}'

rm ${tmpfile}
